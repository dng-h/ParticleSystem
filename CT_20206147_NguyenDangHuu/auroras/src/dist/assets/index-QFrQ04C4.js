import{OrbitControls as D}from"https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js";import X from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/libs/lil-gui.module.min.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function e(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(r){if(r.ep)return;r.ep=!0;const s=e(r);fetch(r.href,s)}})();class n{constructor(t,e,o){this.x=t,this.y=e,this.z=o}fromPolar(t,e,o){var r=t*Math.cos(e)*Math.sin(o),s=t*Math.sin(e)*Math.sin(o),u=t*Math.cos(o);return new n(r,s,u)}toList(){return[this.x,this.y,this.z]}pow(t){return n(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}getMagnitude(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)+Math.pow(this.z,2))}setMagnitude(t){var e=new n(0,0,0);return e=this.toPolar(),this.fromPolar(t,e.y,e.z)}normalize(){return this.setMagnitude(1)}toPolar(){var t=this.getMagnitude(),e=Math.atan2(this.y,this.x),o=Math.atan2(Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)),this.z);return new n(t,e,o)}rotation_matrix_3d(t,e){var o=[[Math.cos(e)+Math.pow(t.x,2)*(1-Math.cos(e)),t.x*t.y*(1-Math.cos(e))-t.z*Math.sin(e),t.x*t.z*(1-Math.cos(e))+t.y*Math.sin(e)],[t.y*t.x*(1-Math.cos(e))+t.z*Math.sin(e),Math.cos(e)+Math.pow(t.y,2)*(1-Math.cos(e)),t.y*t.z*(1-Math.cos(e))-t.x*Math.sin(e)],[t.z*t.x*(1-Math.cos(e))-t.y*Math.sin(e),t.z*t.y*(1-Math.cos(e))+t.x*Math.sin(e),Math.cos(e)+Math.pow(t.z,2)*(1-Math.cos(e))]];return o}multiplyVec(t,e){for(var o=[0,0,0],r=0;r<3;r++)for(var s=0;s<3;s++)o[r]+=t[r][s]*e[s];return o}rotateAboutAxis(t,e){var o=this.rotation_matrix_3d(t,e),r=this.multiplyVec(o,this.toList());return new n(r[0],r[1],r[2])}}class Y{constructor(){}norm(t,e){return 20*(Math.exp(Math.cos(2*t))-.135)/e}generate_curve(t,e,o,r,s,u,v,T){var w=new n(0,0,0);w.x=e.x-t.x,w.y=e.y-t.y,w.z=e.z-t.z;for(var C=r,y=Math.atan2(w.y,w.x),F=s/(2*Math.PI),I=s/5,b=w.getMagnitude()/s,z=Math.round(o*b),H=0,N=4/o,L=2*Math.PI*b/z,U=2*Math.PI*b/z,l=[0],p=[2*Math.sin(-L+C)],P=l.length-1;l[P]<2*Math.PI*b;)l.push(l[P]+noise.perlin2(v,T)*this.norm(H+C,o)+U),p.push(Math.sin(H+C)),v+=N,H+=L,P+=1;l=M(l,F),p=M(p,I);var q=K(M(l,Math.cos(y)),M(p,Math.sin(y))),W=Z(M(l,Math.sin(y)),M(p,Math.cos(y)));l=q,p=W;for(var x=0;x<l.length;x++)l[x]+=t.x,p[x]+=t.y;return{x:l,y:p}}}function M(a,t){for(var e=[],o=0;o<a.length;o++)e.push(a[o]*t);return e}function Z(a,t){for(var e=[],o=0;o<a.length;o++)e[o]=a[o]+t[o];return e}function K(a,t){for(var e=[],o=0;o<a.length;o++)e[o]=a[o]-t[o];return e}const V=`
uniform float pointMultiplier;

attribute float size;
attribute float angle;
attribute vec4 colour;

varying vec4 vColour;
varying vec2 vAngle;

void main() {
  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);

  gl_Position = projectionMatrix * mvPosition;
  gl_PointSize = size * pointMultiplier / gl_Position.w;

  vAngle = vec2(cos(angle), sin(angle));
  vColour = colour;
}`,k=`

uniform sampler2D diffuseTexture;

varying vec4 vColour;
varying vec2 vAngle;

void main() {
  vec2 coords = (gl_PointCoord - 0.5) * mat2(vAngle.x, vAngle.y, -vAngle.y, vAngle.x) + 0.5;
  gl_FragColor = texture2D(diffuseTexture, coords) * vColour;
}`;var _=0;performance.now();class J{constructor(t,e,o){const r={diffuseTexture:{value:new THREE.TextureLoader().load("./textures/light.png")},pointMultiplier:{value:window.innerHeight/(2*Math.tan(30*Math.PI/180))}};this._material=new THREE.ShaderMaterial({uniforms:r,vertexShader:V,fragmentShader:k,blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0,vertexColors:!0}),this.X=e,this.Z=o,this.particleNumber=e.length,e=[],o=[],this._camera=t.camera,this._scene=t.parent,this._particlesList=[],this.pos=[],this._auroraGeom=new THREE.BufferGeometry,this._auroraGeom.setAttribute("position",new THREE.Float32BufferAttribute([],3)),this._auroraGeom.setAttribute("size",new THREE.Float32BufferAttribute([],1)),this._auroraGeom.setAttribute("colour",new THREE.Float32BufferAttribute([],4)),this._auroraPoints=new THREE.Points(this._auroraGeom,this._material),this._auroraPoints.name="auroraParticles"+e[20],this._scene.add(this._auroraPoints),this._UpdateGeometry()}_CreateParticles(t,e){for(var o=Math.random()*100+50,r=0;r<this.particleNumber;r++){var s=Math.random()*150;this.pos.push(o+r/t-e);for(var u=0;u<150;u++){var v=Math.random()*s+r/t-e,T=1;this._particlesList.push({position:new THREE.Vector3(this.X[r],v,this.Z[r]),size:Math.random()*8+2,colour:new THREE.Color(0,1,0),alpha:T})}}console.log("Num of particles: "+this._particlesList.length),this.X=[],this.Z=[]}_UpdateGeometry(){const t=[],e=[],o=[];for(let r of this._particlesList)t.push(r.position.x,r.position.y,r.position.z),e.push(r.size),o.push(r.colour.r,r.colour.g,r.colour.b,r.alpha);this._auroraGeom.setAttribute("position",new THREE.Float32BufferAttribute(t,3)),this._auroraGeom.setAttribute("size",new THREE.Float32BufferAttribute(e,1)),this._auroraGeom.setAttribute("colour",new THREE.Float32BufferAttribute(o,4)),this._auroraGeom.attributes.position.needsUpdate=!0,this._auroraGeom.attributes.size.needsUpdate=!0,this._auroraGeom.attributes.colour.needsUpdate=!0}_UpdateParticles(t,e){for(var o=0,r=0;r<this.particleNumber;r++){for(var s=[],u=r*150;u<r*150+150;u++)s.push(this._particlesList[u].position.y);s[Math.floor(Math.random()*150)],this.pos[r]+=Math.sin((r+_)*.1)*1;for(var u=0;u<150;u++)this._particlesList[o].position.y>=this.pos[r]-5&&this._particlesList[o].position.y<=this.pos[r]+5?A(this._particlesList[o].colour,t,e,.5):this._particlesList[o].position.y<this.pos[r]-5?A(this._particlesList[o].colour,t,e,1):A(this._particlesList[o].colour,t,e,0),this._particlesList[o].position.z+=Math.sin((r/10+_)*.2)*1,this._particlesList[o].position.x+=Math.sin((r/10+_)*.2)*1,this._particlesList[o].position.y+=Math.sin((r/10+_)*.2)*1,o++}_+=.5}LightOn(t,e){this._UpdateGeometry(),this._UpdateParticles(t,e)}}function A(a,t,e,o){var r=new THREE.Color;r.copy(t).lerp(e,o),a.r=r.r,a.g=r.g,a.b=r.b}var f=new THREE.Scene;f.background=new THREE.Color(.3,.3,.3);var g=new THREE.PerspectiveCamera(20,window.innerWidth/window.innerHeight,.1,1e4);g.position.x=0;g.position.y=0;g.position.z=-1e3;var Q=document.getElementById("canvas"),E=new THREE.WebGLRenderer({canvas:Q});E.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(E.domElement);var c=new D(g,E.domElement);c.enableDamping=!0;c.dampingFactor=1;c.enablePan=!0;c.maxPolarAngle=Math.PI/2;c.screenSpacePanning=!0;c.minPolarAngle=Math.PI/2;c.maxPolarAngle=Math.PI/2;var $=new THREE.AmbientLight(16777215,1);f.add($);var d=new THREE.PointLight(16777215);d.intensity=.9;f.add(d);E.shadowMap.enabled=!0;E.shadowMap.type=THREE.PCFSoftShadowMap;d.castShadow=!0;d.shadow.mapSize.width=512;d.shadow.mapSize.height=512;d.shadow.camera.near=.5;d.shadow.camera.far=500;d.shadow.radius=5;let m=[],j=new THREE.TextureLoader().load("./textures/px.png"),tt=new THREE.TextureLoader().load("./textures/nx.png"),et=new THREE.TextureLoader().load("./textures/py.png"),rt=new THREE.TextureLoader().load("./textures/ny.png"),ot=new THREE.TextureLoader().load("./textures/pz.png"),at=new THREE.TextureLoader().load("./textures/nz.png");m.push(new THREE.MeshBasicMaterial({map:j}));m.push(new THREE.MeshBasicMaterial({map:tt}));m.push(new THREE.MeshBasicMaterial({map:et}));m.push(new THREE.MeshBasicMaterial({map:rt}));m.push(new THREE.MeshBasicMaterial({map:ot}));m.push(new THREE.MeshBasicMaterial({map:at}));for(let a=0;a<6;a++)m[a].side=THREE.BackSide;let st=new THREE.BoxGeometry(1e4,1e4,1e4),O=new THREE.Mesh(st,m);f.add(O);O.position.set(0,-700,-200);var i={numberOfAuroras:1,upColor:new THREE.Color(1,0,0),downColor:new THREE.Color(0,1,0)},S=0;const R=new X().open();R.add(i,"numberOfAuroras",1,3,1).name("Number of auroras").onChange(()=>{lt(),B()});R.addColor({color:i.upColor.getHexString()},"color").name("Color 1").onChange(a=>{const{r:t,g:e,b:o}=new THREE.Color(a);i.upColor.r=t,i.upColor.g=e,i.upColor.b=o});R.addColor({color:i.downColor.getHexString()},"color").name("Color 2").onChange(a=>{const{r:t,g:e,b:o}=new THREE.Color(a);i.downColor.r=t,i.downColor.g=e,i.downColor.b=o});var nt=150,it=0,ut=90,ht=new n(0,0,299999),h=[];B();function B(){S=i.numberOfAuroras;var a=[],t=[];i.numberOfAuroras==1&&(a.push(new n(-1e3,1e3,0)),t.push(new n(1e3,0,0))),i.numberOfAuroras==2&&(a.push(new n(-100,1e3,0)),t.push(new n(-1e3,500,0)),a.push(new n(-90,1e3,0)),t.push(new n(1e3,500,0))),i.numberOfAuroras==3&&(a.push(new n(300,1e3,0)),t.push(new n(-1e3,500,0)),a.push(new n(325,1e3,0)),t.push(new n(1e3,500,0)),a.push(new n(300,1e3,0)),t.push(new n(-1e3,1e3,0)));for(var e=0;e<i.numberOfAuroras;e++){var o=Math.random()*1e3,r=Math.random()*1e3,s=new Y,{x:u,y:v}=s.generate_curve(a[e],t[e],nt,it,ut,ht,o,r);h.push(new J({parent:f,camera:g},u,v))}i.numberOfAuroras==1&&h[0]._CreateParticles(20,100),i.numberOfAuroras==2&&(h[0]._CreateParticles(5,100),h[1]._CreateParticles(3,100)),i.numberOfAuroras==3&&(h[0]._CreateParticles(3.5,100),h[1]._CreateParticles(1.7,100),h[2]._CreateParticles(20,100)),G()}function lt(){for(var a=0;a<S;a++)h[a]._auroraPoints.geometry.dispose(),h[a]._auroraPoints.material.dispose(),h[a]._particlesList=[],h[a].pos=[],f.remove(h[a]._auroraPoints);h=[]}function G(){requestAnimationFrame(G);for(var a=0;a<i.numberOfAuroras;a++)h[a].LightOn(i.upColor,i.downColor);c.update(),E.render(f,g)}
